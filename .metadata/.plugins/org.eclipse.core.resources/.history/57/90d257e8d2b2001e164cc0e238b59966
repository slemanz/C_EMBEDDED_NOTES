#include <stdio.h>
#include <stdint.h>

// use a button (pinc 6) to turn on a led (pinc 8)

int main(void) {
	// enabling the peripheral clock to GPIOC
	// RCC address -> 0x40023800
	// AHB1EN address -> 0x40023800 + 0x30
	// bit 2 to enable GPIOC clock
	uint32_t *RCC_AHB1ENR = (uint32_t *)(0x40023800 + 0x30); // have to typecast that is a pointer
	*RCC_AHB1ENR = *RCC_AHB1ENR  | (1 << 2);


	// GPIOC address -> 0x40020800
	// GPIO port mode register -> 0x40020800 + 0x00
	// pin 8 -> bit 17 and 16 : value 01 to output
	// pin 6 -> bit 13 and 12 : value 00 to input
	uint32_t *GPIO_mode = (uint32_t *)(0x40020800 + 0x00);
	*GPIO_mode &= ~(1 << 17); // clear
	*GPIO_mode |=  (1 << 16);  // set


	// GPIOC port pull-up/pull-down register ->  0x40020800 + 0x0C
	// set pull up to pinc 6 -> bit 13 and 12 -> 01
	uint32_t *GPIO_port_pull = (uint32_t *)(0x40020800 + 0x0C);
	*GPIO_port_pull &= ~(1 << 13);
	*GPIO_port_pull |=  (1 << 12);


	// GPIOC port input data register -> 0x40020800 + 0x10
	// bit 6 -> read-only
	uint32_t *GPIO_input = (uint32_t *)(0x40020800 + 0x10);


	// GPIO port output data register -> 0x40020800 + 0x14
	// pin 8 ->
	uint32_t *GPIO_output = (uint32_t *)(0x40020800 + 0x14);
	*GPIO_output |= (1 << 8);

	while(1){
		uint8_t =
		if(!(*GPIO_input & (1<<6))){
			*GPIO_output |= (1 << 8);
		}else{
			*GPIO_output &= ~(1 << 8);
		}

	}

	return 0;
}
